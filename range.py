Notes:

- The `range()` function is used to generate a sequence of numbers.
- When `range(10)` is used, it produces values from 0 to 9 (10 numbers).
- The `range()` function can be given specific start, stop, and step size values in the format `range(start, stop, step)`. If the step size is not specified, it defaults to 1.
- The `range` object is considered "slow" because it does not generate all values it "contains" at once after creation. It offers `in`, `len`, and `__getitem__` operations but is not an iterator.
- Below is an example demonstrating the use of the `range()` function:

Code:


# Python program to show the working of range() function

print(range(15))

print(list(range(15)))

print(list(range(4, 9)))

print(list(range(5, 25, 4)))


In the code snippet provided:
1. `print(range(15))` displays the range object generated by `range(15)`.
2. `print(list(range(15))` converts the range object to a list and prints `[0, 1, 2, ..., 14]`.
3. `print(list(range(4, 9))` generates a list containing `[4, 5, 6, 7, 8]`.
4. `print(list(range(5, 25, 4))` creates a list with values `[5, 9, 13, 17, 21]` using a step size of 4 from 5 up to (but not including) 25.

Overall, the `range()` function is a convenient way to generate a series of numbers efficiently in Python.
